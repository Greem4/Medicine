services:
  db:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: medicines_db
      TZ: Europe/Moscow
      POSTGRES_INITDB_ARGS: "--locale=ru_RU.UTF-8 --lc-collate=C --encoding=UTF-8"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d medicines_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    container_name: rabbitmq_medicines
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    mem_limit: 512m

    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASS}

      TZ: Europe/Moscow
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: medicine-backend:latest
    container_name: app_back_medicine
    environment:
      BASE_URL: ${BASE_URL}
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SET_FROM: ${MAIL_SET_FROM}
      MAIL_TO: ${MAIL_TO}

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: ${RABBIT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBIT_PASS}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}
      YANDEX_CLIENT_ID: ${YANDEX_CLIENT_ID}
      YANDEX_CLIENT_SECRET: ${YANDEX_CLIENT_SECRET}
      YANDEX_REDIRECT_URI: ${YANDEX_REDIRECT_URI}
      SUCCESS_REDIRECT: ${SUCCESS_REDIRECT}
      FAILURE_REDIRECT: ${FAILURE_REDIRECT}
      TZ: Europe/Moscow
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 5s

  frontend:
    image: medicine-frontend:latest
    container_name: app_front_medicine
    ports:
      - "8081:80"
    depends_on:
      - backend
    environment:
      TZ: Europe/Moscow
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  pg_data: { }
