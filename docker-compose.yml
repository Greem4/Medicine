services:
  db:
    image: bitnami/postgresql
    container_name: my_postgres_db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: medicines_db
    volumes:
      - ./db_data:/var/lib/postgresql/data
    ports:
    - "5432:5432"
    networks:
      - app_network

  backend:
    build:
      context: ./spring-medicines
      dockerfile: Dockerfile
    container_name: app_bac_medicine
    ports:
      - "8080:8080"
    environment:
      BASE_URL: ${BASE_URL}
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_SET_FROM: ${MAIL_SET_FROM}
      MAIL_TO: ${MAIL_TO}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS}

      YANDEX_CLIENT_ID: ${YANDEX_CLIENT_ID}
      YANDEX_CLIENT_SECRET: ${YANDEX_CLIENT_SECRET}
      YANDEX_REDIRECT_URI: ${YANDEX_REDIRECT_URI}

      SUCCESS_REDIRECT: ${SUCCESS_REDIRECT}
      FAILURE_REDIRECT: ${FAILURE_REDIRECT}

    depends_on:
      - db
    networks:
      - app_network

  frontend:
    build:
      context: ./spring-frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL}
        VITE_YANDEX_AUTH: ${VITE_YANDEX_AUTH}
    container_name: app_front_medicine
    ports:
      - "3000:80"
    depends_on:
      - backend
      - db
    networks:
      - app_network

volumes:
  db_data:

networks:
  app_network:
